<?php include 'front-header.php';
if(strlen($_SESSION['alogin'])==0)
{	
    header('location:login/index.php');
}elseif(strlen($_SESSION['alogin'])>0){
    if($_SESSION['role'] != 'Reception'){
       echo 'You have no access this page.';
       exit;
    }
}
?>
<style>
.tabs {
    text-align: right;
    float: right;
    margin-bottom: 5px;
}
.loader {
    display: none;
}
.loader.is-active {
	display: block;
	text-align: center;
	background: ;
	margin: 0 auto;
	position: fixed;
	left: auto;
	/* right: auto; */
	top: 50%;
	left: 50%;
	transform: translate(-50%,-50%);
	width: 50px;
	height: 50px;
	color: red;
}
</style>
<section class="section">
<div class="container">
<template v-if='loading'>
	<div class="loader">
  
  </div>
</template>

<i class="icon-spinner icon-spin icon-large"></i>

    <div v-cloak id="vue_contacts">
         <div id="my-loader" :class="{ 'is-active': isloading }">
            <i class="fa fa-spinner fa-spin"></i>
        </div>
			
			
    <div>
<div  :class="{ 'is-active': isloading }">
    <div>test</div>
</div>
            <div class="tabs noprint">
              <ul>
                <li :class="{ 'is-active': !showDisabled }" @click="search_active('active')"><a>Active</a></li>
                <li :class="{ 'is-active': showDisabled }" @click="search_active('inactive')"><a>Previous</a></li>
                <li>  <div class="noprint">
     
            <button  @click="printpage">Printing</button>
        </div></li>
			<template v-if="isAuthenticate">
				<li>
				 <a class="btn" href="https://eservice.bba.gov.bd/program/login.php?logout=true">Logout</a>
				</li>
			</template>
              </ul>
            </div>

    </div>

       <div id="print">
	   <div id="loader" v-if="isLoaded==false" class="fa-3x">
			<i class="fas fa-circle-notch fa-spin"></i>
		</div>
		<table class="table is-striped is-hoverable" width="100%">
            <thead>
                <tr>
				<th @click="setOrderBy('date')">
						Date &nbsp;<i :class="{}" aria-hidden="true"></i></th>
				<th @click="setOrderBy('time')">
						Time &nbsp;</th>
				<th @click="setOrderBy('description')">
						Name&nbsp;</th>
               <th>E-Mail/Mobile &nbsp;<i :class="{}"></i></th>
               <th>Issuer Name & Designation</th>
				<th>Comments</th>
               
                <th>&nbsp;</th> 
                </tr>
            </thead>
            <tbody>
                <tr v-for="(contact, index) in contacts" :key="contact.id">
                    <td width="150">{{ dateFormate(contact.date) }} <br>{{dayName(contact.date)}}</td>
                    <td>{{ contact.time }} {{index}}</td>
                    <td>{{ contact.description }}</td>
                    <td>{{ contact.issuer }}</td>
                    <td>{{ contact.comments }}</td>
                    <td>{{ contact.name }}</td>
                    
					<td  class="edit noprint">
						<span class="fa fa-sign-out noprint" @click="EditIn(contact, index)">IN</span>
						<span class="fa fa-sign-in noprint" @click="openModalOut(contact, index)">OUT</span>
                    </td>
                </tr>
            </tbody>
        </table>
	
		</div>
			
			 <div class="modal" :class="{ 'is-active': isModalIn }">
                  <div class="modal-background" @click="closeModalIn()"></div>
                  <div class="modal-card">
                        <header class="modal-card-head">
                            <p class="modal-card-title">Visitor In</p>
                            <button class="delete" aria-label="close" @click="closeModalIn()"></button>
                        </header>
                        <section class="modal-card-body">
                        <form v-on:submit.prevent>
						    
							<div class="row">
								<div class="col-lg-6">
									<label class="label">Date</label>
										<flat-pickr
												v-model="formData.in_date"              
												class="form-control" 
												placeholder="Select date"     
												name="date">
										</flat-pickr>
									
								</div>
								<div class="col-lg-6">
								  <label class="label">Time</label>
								  <div class="input-group">
									<flat-pickr
											v-model="formData.time"
											:config="config"               
											class="form-control" 
											placeholder="Select time"     
											name="time">
									</flat-pickr>
									<div class="input-group-btn">
									  <button class="btn btn-default" type="button" title="Toggle" data-toggle>
										<i class="fa fa-clock-o">
										  <span aria-hidden="true" class="sr-only">Toggle</span>
										</i>
									  </button>
									  <button class="btn btn-default" type="button" title="Clear" data-clear>
										<i class="fa fa-times">
										  <span aria-hidden="true" class="sr-only">Clear</span>
										</i>               
									  </button>
									</div>
								  </div>
								</div>
                                <div class="field">
                                <label class="label">Card No</label>
                                <input class="input" type="text" name="in_card" v-model="formData.in_card">
								
                            </div>
							<div class="field">
                                <label class="label">Comments</label>
                                <input class="input" type="text" name="reception_comments" v-model="formData.reception_comments">
                            </div>
                            <div class="form-check">
                            <!--<input
                                type="checkbox"
                                name="is_in"
                                v-model="is_in"
                                true-value="yes"
                                false-value="no"
                                >
									<label class="form-check-label" for="is_in">Is In</label>-->
						    </div>
							</div>
                    
                       
                     
                        </section>
                <footer class="modal-card-foot" style="justify-content: flex-end;">
                        <button v-if="!isEditing" class="button is-primary" @click="save_in()">Add</button>
                        <button v-if="isEditing" class="button is-primary" @click="save_in()">Save</button>
                </footer>
                </form>

                  </div>
                  <button class="modal-close is-large" aria-label="close" @click="closeModalEntrance()"></button>
            </div>
			
			<div class="modal" :class="{ 'is-active': isModalOut }">
                  <div class="modal-background" @click="closeModalOut()"></div>
                  <div class="modal-card">
                        <header class="modal-card-head">
                            <p class="modal-card-title">Exit</p>
                            <button class="delete" aria-label="close" @click="closeModalOut()"></button>
                        </header>
                        <section class="modal-card-body">
                        <form v-on:submit.prevent>
						    
							<div class="row">
								<div class="col-lg-6">
									<label class="label">Date</label>
										<flat-pickr
												v-model="formData.date"              
												class="form-control" 
												placeholder="Select time"     
												name="date">
										</flat-pickr>
									
								</div>
								<div class="col-lg-6">
								  <label class="label">Time</label>
								  <div class="input-group">
									<flat-pickr
											v-model="formData.time"
											:config="config"               
											class="form-control" 
											placeholder="Select time"     
											name="time">
									</flat-pickr>
									<div class="input-group-btn">
									  <button class="btn btn-default" type="button" title="Toggle" data-toggle>
										<i class="fa fa-clock-o">
										  <span aria-hidden="true" class="sr-only">Toggle</span>
										</i>
									  </button>
									  <button class="btn btn-default" type="button" title="Clear" data-clear>
										<i class="fa fa-times">
										  <span aria-hidden="true" class="sr-only">Clear</span>
										</i>               
									  </button>
									</div>
								  </div>
								</div>
							</div>
                    
                       
                            <div class="field">
                                <label class="label">Card No</label>
                                <input class="input" type="text" name="card_no" v-model="formData.card_no">
								
                            </div>
							<div class="field">
                                <label class="label">Comments</label>
                                <input class="input" type="comments" name="comments" v-model="formData.comments">
                            </div>
							<div class="form-check">
								<input type="checkbox" name="is_out" id="is_out" class="form-check-input">
								<label class="form-check-label" for="is_out">Is Out</label>
							</div>
                        </section>
                <footer class="modal-card-foot" style="justify-content: flex-end;">
                        <button v-if="!isEditing" class="button is-primary" @click="save_entrance()">Add</button>
                        <button v-if="isEditing" class="button is-primary" @click="changeContact()">Save</button>
                </footer>
                </form>

                  </div>
                  <button class="modal-close is-large" aria-label="close" @click="closeModalExit()"></button>
            </div>
		
       </div>

    </div>

</section>
<?php //include 'front-footer.php'; ?>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/vuex/2.1.1/vuex.min.js"></script>

<!--<script src='https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.10/vue.min.js'></script>-->
<script src='https://cdnjs.cloudflare.com/ajax/libs/vuejs-datepicker/1.5.4/vuejs-datepicker.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/flatpickr@4/dist/flatpickr.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/vue-flatpickr-component@8'>
<script src='https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js'></script>


<script>
    //const isloading= false;
	Vue.component('flat-pickr',{
	  props:['value', 'config']
	});


   const app = new Vue({
        el: '#vue_contacts',
         components:  {
			vuejsDatepicker,'flat-pickr' : VueFlatpickr
		  },
        data: {
			date: null,
            dateTime: '',
            config: {
                    wrap: true,
                    enableTime: true,
                    noCalendar: true,
                    dateFormat: "h:i K",
                    defaultDate: null,
                    minuteIncrement: "1",
                    time_24hr: false
                },
			formData:{
                id:0,
                date:'',
                time:'',
                description:'',
                is_done:0,
                comments:'',
                issuer:0,
                mobile:'',
                in_time:'',
                in_date:'',
                reception_comments:'',
                is_in:0,
                in_card:'',
                out_card:'',
                is_out:'',
                out_date:''
			},
            time:null,
            contacts: [],
			isLoaded:false,
            showDisabled:false,
            isloading:false,
			isAuthenticate:false,
            isEditing: false,
            isModalIn: false,
            isModalOut: false
        },
        mounted: function() {
           
		
            let self = this;
            window.addEventListener('keyup', function(event) {
                // If  ESC key was pressed...
                if (event.keyCode === 27) {
                    // try close your dialog
                    self.isModalIn = false;
                }
            });
            this.isloading=true;
            this.getContacts();
			this.loading = false;
            
            
        },
        computed: {
            
        },
        methods: {
            getBangla:function(english_number){
			var finalEnlishToBanglaNumber={'0':'০','1':'১','2':'২','3':'৩','4':'৪','5':'৫','6':'৬','7':'৭','8':'৮','9':'৯'};
 
				String.prototype.getDigitBanglaFromEnglish = function() {
					var retStr = this;
					for (var x in finalEnlishToBanglaNumber) {
						 retStr = retStr.replace(new RegExp(x, 'g'), finalEnlishToBanglaNumber[x]);
					}
					return retStr;
				};
				 
				return bangla_converted_number=english_number.getDigitBanglaFromEnglish();
 
			},
			dateFormate: function(getDate){
			const date = new Date(getDate)
			const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: 'short', day: '2-digit' }) 
			const [{ value: month },,{ value: day },,{ value: year }] = dateTimeFormat .formatToParts(date ) 
			console.log(this.getBangla(day));
			return `${day}-${month}-${year }`;
			
			//console.log(`${day}-${month}-${year}`) // just for fun

			},
			dayName: function(dateString){
				var days = ['রবি বার', 'সোমবার', 'মঙ্গলবার', 'বুধবার','বৃহস্পতিবার', 'শুক্রবার', 'শনিবার'];
				var d = new Date(dateString);
				var dayName = days[d.getDay()];
				return dayName
			},
            getContacts: function() {
                axios.get('api/reception.php')
                    .then(function(response) {
                        
                        app.contacts = response.data.result;
						app.isLoaded = true;
						//app.userName = response.data.message.isAuthenticate;
						//console.log(response.data.message.isAuthenticate);
						//console.log(response.data.result);
						// Check the response was a success
                        this.isloading=false;
						console.log(response);
						if(response.data.message === 'success')
						{
							//this.user = response.data.user;
							//app.user_loggedin=0
							
						}
                    })
                    .catch(function(error) {
                        console.log(error);
                    });
                    isloading:false;
            },
			EditIn: function() {
                this.formData = app.contacts;
                console.log( this.formData);
                this.isEditing = true;          
                this.openModalIn();
            },
			closeModalIn: function() {
                this.isModalIn = false;
            },
			openModalIn: function() {
                this.isModalIn = true;
            },
			openModalOut: function() {
                this.isModalOut = true;
            },
			closeModalOut: function() {
                this.isModalOut = false;
            },
			
            save_in: function() {
                console.log("Update IN")

                let formData = new FormData();
                console.log("date:", this.formData.date, "id:", this.formData.id, " key:", this.formData.index)
                formData.append('id', this.formData.id)
                //formData.append('date', this.formData.date || '')
                //formData.append('time', this.formData.time || '')
                formData.append('in_date', this.formData.in_date || '')
                formData.append('in_card', this.formData.in_card || '')
                formData.append('reception_comments', this.formData.reception_comments || '')
                var contact = {};
                formData.forEach(function(value, key) {
                    contact[key] = value;
                });

                axios({
                        method: 'post',
                        url: 'api/reception.php',
                        data: formData,
                        config: { headers: { 'Content-Type': 'multipart/form-data' } }
                    })
                    .then(function(response) {
                        //handle success
                        console.log(response)
                       // Vue.set(app.filteredContacts, app.index, contact)
                        app.resetForm();
                    })
                    .catch(function(response) {
                        //handle error
                        console.log(response)
                    });
            },
            resetForm: function() {
                this.formData = {};
                this.isEditing = false;
                this.closeModalIn();

            },  
            printpage(){
                window.print()        
            }
        }
    });

</script>

</body>
</html>